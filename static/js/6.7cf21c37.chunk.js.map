{"version":3,"sources":["components/DeviceOrientation.js","custom-hooks/useOrientation.js"],"names":["DeviceOrientationSupported","orientation","useState","setOrientation","useEffect","deviceOrientationHandler","rotationEvent","console","log","window","addEventListener","removeEventListener","useOrientation","Page","title","alpha","beta","gamma","webkitCompassHeading","DeviceOrientation","DeviceOrientationEvent"],"mappings":"yJAIA,SAASA,IACP,IAAMC,ECHD,WAA2B,IAAD,EACOC,mBAAS,MADhB,mBACxBD,EADwB,KACXE,EADW,KAgB/B,OAdAC,qBAAU,WACR,IAAMC,EAA2B,SAAAC,GAC/BC,QAAQC,IAAIF,GACZH,EAAeG,IAOjB,OALAG,OAAOC,iBACL,oBACAL,GACA,GAEK,WACLI,OAAOE,oBAAoB,oBAAqBN,MAEjD,IACIJ,EDbaW,GAEpB,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAM,sBACTb,EACC,oCACE,uCAAaA,EAAYc,OACzB,sCAAYd,EAAYe,MACxB,uCAAaf,EAAYgB,OACzB,yCAAehB,EAAYiB,uBAG7B,yCAMO,SAASC,IACtB,OAAIV,OAAOW,uBACF,kBAACpB,EAAD,MAGP,kBAACa,EAAA,EAAD,CAAMC,MAAM,sBACV,+CA7BN","file":"static/js/6.7cf21c37.chunk.js","sourcesContent":["import React from \"react\";\nimport Page from \"components/Page\";\nimport { useOrientation } from \"custom-hooks/useOrientation\";\n\nfunction DeviceOrientationSupported() {\n  const orientation = useOrientation();\n\n  return (\n    <Page title=\"Device Orientation\">\n      {orientation ? (\n        <>\n          <div>Alpha: {orientation.alpha}</div>\n          <div>Beta: {orientation.beta}</div>\n          <div>Gamma: {orientation.gamma}</div>\n          <div>Compass: {orientation.webkitCompassHeading}</div>\n        </>\n      ) : (\n        <div>No data</div>\n      )}\n    </Page>\n  );\n}\n\nexport default function DeviceOrientation() {\n  if (window.DeviceOrientationEvent) {\n    return <DeviceOrientationSupported />;\n  }\n  return (\n    <Page title=\"Device Orientation\">\n      <div>Not supported</div>\n    </Page>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useOrientation() {\n  const [orientation, setOrientation] = useState(null);\n  useEffect(() => {\n    const deviceOrientationHandler = rotationEvent => {\n      console.log(rotationEvent);\n      setOrientation(rotationEvent);\n    };\n    window.addEventListener(\n      \"deviceorientation\",\n      deviceOrientationHandler,\n      true\n    );\n    return () => {\n      window.removeEventListener(\"deviceorientation\", deviceOrientationHandler);\n    };\n  }, []);\n  return orientation;\n}\n"],"sourceRoot":""}