{"version":3,"sources":["components/Camera.js","custom-hooks/useCamera.js"],"names":["Camera","cameraSource","_useState","useState","undefined","_useState2","Object","slicedToArray","mediaStream","setMediaStream","useEffect","videoStream","navigator","mediaDevices","_getCameraSource","apply","this","arguments","getCameraSource","getVideoTracks","forEach","track","stop","alert","error","concat","name","message","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","getUserMedia","video","width","ideal","height","audio","sent","t0","console","Error","useCamera","react_default","createElement","Page","title","id","ref","el","srcObject","src","window","URL","createObjectURL","autoPlay","playsInline","__webpack_require__","d","__webpack_exports__"],"mappings":"2JAIe,SAASA,IACtB,IAAMC,ECHD,WAAqB,IAAAC,EACYC,wBAASC,GADrBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACnBM,EADmBH,EAAA,GACNI,EADMJ,EAAA,GAsC1B,OApCAK,oBAAU,WAKR,IAAIC,EAJJ,GAAKC,UAAUC,aAqBf,OAtBc,WAAAC,EAAAC,MAAAC,KAAAC,WAqBdC,GACO,WACL,IACMP,GAAeA,EAAYQ,eAC7BR,EAAYQ,iBAAiBC,QAAQ,SAAAC,GACnCA,EAAMC,SAGRC,MAAK,uBAEP,MAAOC,GACPD,MAAK,GAAAE,OAAID,EAAME,KAAV,MAAAD,OAAmBD,EAAMG,YAhCpB,SAAAb,IAAA,OAAAA,EAAAR,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAAC,EAAAC,KAMd,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEwBxB,UAAUC,aAAawB,aAAa,CACtDC,MAAO,CACLC,MAAO,CAAEC,MAAO,MAChBC,OAAQ,CAAED,MAAO,MAEnBE,OAAO,IAPb,OAEI/B,EAFJuB,EAAAS,KASIlC,EAAeE,GATnBuB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAWIW,QAAQrB,MAAM,kBAAdU,EAAAU,IACAnC,EAAcyB,EAAAU,IAZlB,yBAAAV,EAAAZ,SAAAU,EAAA,kBANcjB,MAAAC,KAAAC,WAEZR,EAAeqC,MAAM,kCAiCtB,IACItC,EDnCcuC,GAErB,GAAI9C,aAAwB6C,OAAU7C,GAAgBA,EAAayB,KACjE,OACEsB,EAAAlB,EAAAmB,cAACC,EAAA,EAAD,CAAMC,MAAM,2BACTlD,EAAayB,MAAQzB,EAAayB,KADrC,IAC4C,IACzCzB,EAAa0B,SAAW1B,EAAa0B,SAe5C,OACEqB,EAAAlB,EAAAmB,cAACC,EAAA,EAAD,CAAMC,MAAM,uBACVH,EAAAlB,EAAAmB,cAAA,2BACAD,EAAAlB,EAAAmB,cAAA,SAAOG,GAAG,aAAaC,IAbD,SAAAC,GACnBrD,GAAiBqD,IAClB,cAAeA,EACjBA,EAAGC,UAAYtD,EAGfqD,EAAGE,IAAMC,OAAOC,IAAIC,gBAAgB1D,KAOW2D,UAAQ,EAACC,aAAW,KA7BzEC,EAAAC,EAAAC,EAAA,4BAAAhE","file":"static/js/4.d2bc8714.chunk.js","sourcesContent":["import React from \"react\";\nimport Page from \"components/Page\";\nimport { useCamera } from \"custom-hooks/useCamera\";\n\nexport default function Camera() {\n  const cameraSource = useCamera();\n\n  if (cameraSource instanceof Error || (cameraSource && cameraSource.name)) {\n    return (\n      <Page title=\"Camera is NOT suported!\">\n        {cameraSource.name && cameraSource.name}:{\" \"}\n        {cameraSource.message && cameraSource.message}\n      </Page>\n    );\n  }\n\n  const setupCameraSource = el => {\n    if (!cameraSource || !el) return;\n    if (\"srcObject\" in el) {\n      el.srcObject = cameraSource;\n    } else {\n      // For older browsers without the srcObject.\n      el.src = window.URL.createObjectURL(cameraSource);\n    }\n  };\n\n  return (\n    <Page title=\"Camera is suported!\">\n      <div>Video Below?</div>\n      <video id=\"video-chat\" ref={setupCameraSource} autoPlay playsInline />\n    </Page>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nexport function useCamera() {\n  const [mediaStream, setMediaStream] = useState(undefined);\n  useEffect(() => {\n    if (!navigator.mediaDevices) {\n      setMediaStream(Error(\"Media devices not supported.\"));\n      return;\n    }\n    let videoStream;\n    async function getCameraSource() {\n      try {\n        videoStream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            width: { ideal: 1280 },\n            height: { ideal: 720 }\n          },\n          audio: false\n        });\n        setMediaStream(videoStream);\n      } catch (error) {\n        console.error(\"getCameraSource\", error);\n        setMediaStream(error);\n      }\n    }\n    getCameraSource();\n    return () => {\n      try {\n        if (videoStream && videoStream.getVideoTracks) {\n          videoStream.getVideoTracks().forEach(track => {\n            track.stop();\n          });\n        } else {\n          alert(`Camera not stopped?`);\n        }\n      } catch (error) {\n        alert(`${error.name}: ${error.message}`);\n      }\n    };\n  }, []);\n  return mediaStream;\n}\n"],"sourceRoot":""}