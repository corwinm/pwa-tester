{"version":3,"sources":["components/Page.js","components/ErrorBoundary.js","components/FloatingMessage.module.scss","serviceWorkerRegistration.js","custom-hooks/useAppStatus.js","context/AppStatusContext.js","components/FloatingMessage.js","components/AppUpdate.js","components/BuildTimeStamp.js","components/Footer.js","components/Features.js","components/Home.js","components/ShareButton.js","components/CheckUpdateButton.js","components/Navbar.js","components/OfflineIndicator.js","custom-hooks/useOffline.js","components/RouteTrace.js","context/AnalyticsContext.js","components/App.js","reportWebVitals.js","index.js"],"names":["Page","title","children","className","ErrorBoundary","props","state","hasError","message","name","error","info","console","log","this","onClick","window","location","reload","React","Component","module","exports","isLocalhost","Boolean","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","registerValidSW","catch","checkValidServiceWorker","reloading","oncontrollerchange","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","useAppStatus","useState","updateAvailable","setUpdateAvailable","offLineReady","setoffLineReady","setregistration","installPrompt","setinstallPrompt","useEffect","installPromptHandler","e","preventDefault","removeEventListener","ignore","sw","getRegistration","currentRegistration","waiting","undefined","AppStatusContext","createContext","AppStatusProvider","appUpdateAvailable","Provider","value","FloatingMessage","actionText","deleteClick","actionClick","styles","floatingContainer","withShadow","aria-label","AppUpdate","useContext","showInstallPrompt","setShowInstallPrompt","showAppUpdate","setShowAppUpdate","postMessage","type","prompt","userChoice","choiceResult","outcome","BuildTimeStamp","Footer","Features","mappedFeatures","description","route","supported","geolocation","mediaDevices","getUserMedia","paymentManager","DeviceMotionEvent","DeviceOrientationEvent","vibrate","clipboard","share","getFeatures","map","feature","index","Feature","reduce","rows","element","push","length","row","to","style","textDecoration","ServiceWorkerDetails","active","matchMedia","matches","standalone","Home","appUpdate","alert","ShareButton","a","text","url","disabled","CheckUpdateButton","updating","setUpdating","update","newRegistration","NavbarFixed","role","NavMenu","menuOpen","NavHamburger","toggleMenu","tabIndex","aria-expanded","aria-hidden","NavbarStart","MenuLink","exact","activeClassName","NavbarEnd","BackButton","withRouter","setMenuOpen","history","goBack","OfflineIndicator","onLine","offline","setOffline","updateOffline","updateOnline","useOffline","Trace","path","ReactGA","pageview","RouteTrace","render","pathname","search","initialize","testMode","LazyAbout","lazy","LazyCamera","LazyDeviceMotion","LazyOrientation","LazyGeolocation","LazyNotifications","App","basename","fallback","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"+GAAA,0DAGe,SAASA,EAAT,GAAoC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACpC,OACE,cAAC,IAAD,UACE,qBAAKC,UAAU,mBAAf,SACE,yBAASA,UAAU,UAAnB,SACE,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,uBAAd,SAAsCF,IACtC,8BAAMC,e,2FCRZE,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,UAAU,EAAOC,QAAS,GAAIC,KAAM,IAFlC,E,qDAUnB,SAAkBC,EAAOC,GAEvBC,QAAQC,IAAIH,EAAOC,K,oBAGrB,WACE,OAAIG,KAAKR,MAAMC,SAGX,qCACE,uDACA,4BAAIO,KAAKR,MAAMG,OACf,4BAAIK,KAAKR,MAAME,UACf,4BACE,wBAAQL,UAAU,SAASY,QAAS,kBAAMC,OAAOC,SAASC,UAA1D,8BAMDJ,KAAKT,MAAMH,Y,uCAzBpB,SAAgCQ,GAE9B,MAAO,CAAEH,UAAU,EAAMC,QAASE,EAAMF,QAASC,KAAMC,EAAMD,U,GARrCU,IAAMC,WAmCnBhB,O,mBCpCfiB,EAAOC,QAAU,CAAC,kBAAoB,2CAA2C,WAAa,sC,gHCWxFC,EAAcC,QACW,cAA7BR,OAAOC,SAASQ,UAEe,UAA7BT,OAAOC,SAASQ,UAEhBT,OAAOC,SAASQ,SAASC,MAAM,2DAG5B,SAASC,EAASC,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIC,IAAIC,cAAwBf,OAAOC,SAASe,MACpDC,SAAWjB,OAAOC,SAASgB,OAIvC,OAGFjB,OAAOkB,iBAAiB,QAAQ,WAC9B,IAAMC,EAAK,UAAMJ,cAAN,sBAEPR,IAsEV,SAAiCY,EAAOP,GAEtCQ,MAAMD,EAAO,CACXE,QAAS,CAAE,iBAAkB,YAE5BC,MAAK,SAACC,GAEL,IAAMC,EAAcD,EAASF,QAAQI,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5Cd,UAAUe,cAAcC,MAAMP,MAAK,SAACQ,GAClCA,EAAaC,aAAaT,MAAK,WAC7BtB,OAAOC,SAASC,eAKpB8B,EAAgBb,EAAOP,MAG1BqB,OAAM,WACLrC,QAAQC,IAAI,oEA5FVqC,CAAwBf,EAAOP,GAI/BC,UAAUe,cAAcC,MAAMP,MAAK,WACjC1B,QAAQC,IACN,+GAMJmC,EAAgBb,EAAOP,OAM/B,SAASoB,EAAgBb,EAAOP,GAC9B,IAAIuB,GAAY,EAChBtB,UAAUe,cAAcQ,mBAAqB,WACvCD,IACJA,GAAY,EACZnC,OAAOC,SAASC,WAElBW,UAAUe,cACPjB,SAASQ,GACTG,MAAK,SAACQ,GACLA,EAAaO,cAAgB,WAC3B,IAAMC,EAAmBR,EAAaS,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBhD,QACfuB,UAAUe,cAAca,YAI1B7C,QAAQC,IACN,+GAKEe,GAAUA,EAAO8B,UACnB9B,EAAO8B,SAASZ,KAMlBlC,QAAQC,IAAI,sCAGRe,GAAUA,EAAO+B,WACnB/B,EAAO+B,UAAUb,WAO5BG,OAAM,SAACvC,GACNE,QAAQF,MAAM,4CAA6CA,MC9BlDkD,MAnEf,WAAyB,IAAD,EACwBC,oBAAS,GADjC,mBACfC,EADe,KACEC,EADF,OAEkBF,oBAAS,GAF3B,mBAEfG,EAFe,KAEDC,EAFC,OAGkBJ,mBAAS,MAH3B,mBAGff,EAHe,KAGDoB,EAHC,OAIoBL,mBAAS,MAJ7B,mBAIfM,EAJe,KAIAC,EAJA,KAgEtB,OA1DAC,qBAAU,WACR,IAAMC,EAAuB,SAACC,GAE5BA,EAAEC,iBAEFJ,EAAiBG,GACjB3D,QAAQC,IAAI,4BAA6B0D,IAG3C,OADAvD,OAAOkB,iBAAiB,sBAAuBoC,GACxC,WACLtD,OAAOyD,oBAAoB,sBAAuBH,MAEnD,IAEHD,qBAAU,WACR,IAAIK,GAAS,EAmBb,OAlBAC,EAAY,CACVjB,SAAU,SAACZ,GACL4B,IACJ9D,QAAQC,IACN,qDACAiC,GAEFoB,EAAgBpB,GAChBiB,GAAmB,KAErBJ,UAAW,SAACb,GACN4B,IACJ9D,QAAQC,IAAI,mCAAoCiC,GAChDoB,EAAgBpB,GAChBmB,GAAgB,OAGpBrD,QAAQC,IAAI,iCACL,WACLD,QAAQC,IAAI,sBACZ6D,GAAS,KAEV,IAEHL,qBAAU,WACR,GAAM,kBAAmBxC,UAAzB,CAIA,IAAI6C,GAAS,EAQb,OAPA7C,UAAUe,cAAcgC,kBAAkBtC,MAAK,SAACuC,GAC1CH,IACJ9D,QAAQC,IAAI,0BAA2BgE,GACvCX,EAAgBW,GAChBZ,IAAkBY,GAClBd,EAAmBc,KAAyBA,EAAoBC,aAE3D,WACLJ,GAAS,GAZTR,OAAgBa,KAcjB,IAEI,CAAEjB,kBAAiBE,eAAclB,eAAcqB,kB,OChE3Ca,EAAmB7D,IAAM8D,cAAc,CAClDnB,iBAAiB,EACjBE,cAAc,EACdlB,aAAc,KACdqB,cAAe,OAGJe,EAAoB,SAAC,GAAkB,IAAhBhF,EAAe,EAAfA,SAC5BiF,EAAqBvB,IAC3B,OACE,cAACoB,EAAiBI,SAAlB,CAA2BC,MAAOF,EAAlC,SACGjF,K,+BCXQ,SAASoF,EAAT,GAAyF,IAA9DrF,EAA6D,EAA7DA,MAA6D,IAAtDO,eAAsD,MAA5C,GAA4C,EAAxC+E,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,YACtF,OAAQ,qBAAKtF,UAAWuF,IAAOC,kBAAoB,eAA3C,SACN,0BAASxF,UAAW,sBAAwBuF,IAAOE,WAAnD,UACE,sBAAKzF,UAAU,iBAAf,UACE,4BAAIF,IACJ,wBAAQE,UAAU,mBAAmB0F,aAAW,SAAS9E,QAASyE,OAEpE,sBAAKrF,UAAU,eAAf,UACGK,EACD,4BACE,wBAAQL,UAAU,6CAA6CY,QAAS0E,EAAxE,SACGF,cCVE,SAASO,IAAa,IAAD,EACuBC,qBACvDf,GADMlB,EAD0B,EAC1BA,gBAAiBhB,EADS,EACTA,aAAcqB,EADL,EACKA,cADL,EAIgBN,oBAAS,GAJzB,mBAI3BmC,EAJ2B,KAIRC,EAJQ,OAKQpC,oBAAS,GALjB,mBAK3BqC,EAL2B,KAKZC,EALY,KAOlC,GAAID,GAAiBpC,EAAiB,CAIpC,OACE,cAACwB,EAAD,CACErF,MAAM,oCACNsF,WAAW,aACX/E,QACE,kHAKFgF,YAAa,kBAAMW,GAAiB,IACpCV,YAdwB,WAC1B3C,EAAagC,QAAQsB,YAAY,CAACC,KAAM,oBAiB5C,GAAIL,GAAqB7B,EAAe,CAatC,OACE,cAACmB,EAAD,CACErF,MAAM,kCACNsF,WAAW,cACXC,YAAa,kBAAMS,GAAqB,IACxCR,YAjBkB,WACpBtB,EAAcmC,SAEdnC,EAAcoC,WAAWjE,MAAK,SAAAkE,GACC,aAAzBA,EAAaC,QACf7F,QAAQC,IAAI,iCAEZD,QAAQC,IAAI,kCAEdoF,GAAqB,SAY3B,OAAO,K,YC/CM,SAASS,IACtB,OACE,wCAJe,4BCAJ,SAASC,IACtB,OACE,wBAAQxG,UAAU,SAAlB,SACE,sBAAKA,UAAU,4BAAf,UACE,+CACgB,mBAAG6B,KAAK,6BAAR,0BADhB,oCAEkC,IAChC,oBAAGA,KAAK,wCAAR,UACG,IACD,sBAAM7B,UAAU,OAAhB,SACE,mBAAGA,UAAU,oBAHjB,YAOA,oBAAG6B,KAAK,0FAAR,UACG,IACD,sBAAM7B,UAAU,OAAhB,SACE,mBAAGA,UAAU,oBAHjB,yBAQF,cAACuG,EAAD,S,oBCuBO,SAASE,EAAT,GAAqC,IAE5CC,EA9CY,SAAA/D,GAAY,MAAI,CAClC,CACEgE,YAAa,cACbC,MAAO,eACPC,UAAWnF,UAAUoF,aAEvB,CACEH,YAAa,SACbC,MAAO,UACPC,UAAWnF,UAAUqF,cAAgBrF,UAAUqF,aAAaC,cAE9D,CACEL,YAAa,gBACbC,MAAO,iBACPC,UAAW,iBAAkBhG,QAE/B,CACE8F,YAAa,WACbE,UAAWlE,GAAgBA,EAAasE,gBAE1C,CACEN,YAAa,SACbC,MAAO,iBACPC,UAAWhG,OAAOqG,mBAEpB,CACEP,YAAa,cACbC,MAAO,sBACPC,UAAWhG,OAAOsG,wBAEpB,CAAER,YAAa,YAAaE,UAAWnF,UAAU0F,SACjD,CAAET,YAAa,gBAAiBE,UAAW,WAAYnF,WACvD,CAAEiF,YAAa,YAAaE,UAAWnF,UAAU2F,WACjD,CAAEV,YAAa,YAAaE,UAAWnF,UAAU4F,OACjD,CACEX,YAAa,qBACbE,UAAWlE,GAAgB,gBAAiBA,GAE9C,CACEgE,YAAa,kBACbE,UAAWlE,GAAgB,SAAUA,IAKtB4E,CADgC,EAAhB5E,cAG9B6E,KAAI,SAACC,EAASC,GAAV,OAAoB,cAACC,EAAD,eAAyBF,GAAXC,MACtCE,QAAO,SAACC,EAAMC,EAASJ,GAGtB,OAFAA,EAAQ,IAAM,GAAKG,EAAKE,KAAK,IAC7BF,EAAKA,EAAKG,OAAS,GAAGD,KAAKD,GACpBD,IACN,IACFL,KAAI,SAACS,EAAKP,GAAN,OACH,qBAAiB1H,UAAU,mBAA3B,SACGiI,GADOP,MAId,OAAO,cAAC7H,EAAA,EAAD,CAAMC,MAAM,WAAZ,SAAwB4G,IAGjC,SAASiB,EAAT,GAAqD,IAAlChB,EAAiC,EAAjCA,YAAaE,EAAoB,EAApBA,UAAWD,EAAS,EAATA,MACzC,OAAkB,OAAdC,EAEA,qBAAK7G,UAAU,iBAAf,SACE,0BAASA,UAAU,4CAAnB,UACE,mBAAGA,UAAU,QAAb,SAAsB2G,IACtB,mBAAG3G,UAAU,WAAb,6BAKJ6G,EAEA,qBAAK7G,UAAU,iBAAf,SACE,0BAASA,UAAU,2DAAnB,UACE,mBAAGA,UAAU,QAAb,SAAsB2G,IACtB,oBAAG3G,UAAU,WAAb,sBACY,IACT4G,GACC,cAAC,IAAD,CACEsB,GAAItB,EACJlB,aAAYiB,EACZwB,MAAO,CAAEC,eAAgB,QAH3B,SAKE,sBAAMpI,UAAU,OAAhB,SACE,mBAAGA,UAAU,0CAW3B,qBAAKA,UAAU,iBAAf,SACE,0BAASA,UAAU,0DAAnB,UACE,mBAAGA,UAAU,QAAb,SAAsB2G,IACtB,mBAAG3G,UAAU,WAAb,gCCnGR,SAASqI,EAAT,GAAiD,IAAjB1F,EAAgB,EAAhBA,aAC9B,OAAKA,EAGH,eAAC9C,EAAA,EAAD,CAAMC,MAAM,UAAZ,UACE,iDACiB6C,EAAa2F,QAAU3F,EAAa2F,OAAOnI,SAE5D,kDACkBwC,EAAagC,SAAWhC,EAAagC,QAAQxE,UAE7DU,OAAO0H,WAAW,8BAA8BC,SAChD3H,OAAOa,UAAU+G,aAAe,gEAXZ,KAgBb,SAASC,IACtB,IAAMC,EAAY/C,qBAAWf,GAEvBxE,EACJ,kBAAmBqB,UACf,2BACA,+BAKN,OACE,qCACE,yBAAS1B,UAAU,mCAAnB,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBK,IACvB,wBACEL,UAAU,4CACVY,QAXS,WACnBgI,MAAM,wDAQE,oCASN,cAACP,EAAD,CAAsB1F,aAAcgG,EAAUhG,eAC9C,cAAC8D,EAAD,CAAU9D,aAAcgG,EAAUhG,kB,6BC/CzB,SAASkG,IACtB,IAAMvB,EAAK,uCAAG,sBAAAwB,EAAA,+EAEJpH,UAAU4F,MAAM,CACpBxH,MAAO,aACPiJ,KAAM,aACNC,IAAKnI,OAAOC,SAASe,OALb,OAOVpB,QAAQC,IAAI,qBAPF,+CASVD,QAAQC,IAAI,iBAAZ,MATU,wDAAH,qDAaX,OACE,yBACEV,UAAU,oBACVY,QAAS0G,EACT2B,UAAWvH,UAAU4F,MAHvB,UAKE,sBAAMtH,UAAU,OAAhB,SACE,mBAAGA,UAAU,mBAEf,4CCtBS,SAASkJ,IAAqB,IAAD,EACAtD,qBAAWf,GAA7ClC,EADkC,EAClCA,aAAcgB,EADoB,EACpBA,gBADoB,EAEVD,oBAAS,GAFC,mBAEnCyF,EAFmC,KAEzBC,EAFyB,KAI1C,IAAKzG,EAAc,OAAO,KAE1B,GAAIgB,EAAiB,CAInB,OACE,yBAAQ3D,UAAU,iBAAiBY,QAJT,WAC1B+B,EAAagC,QAAQsB,YAAY,CAACC,KAAM,kBAGxC,UACE,sBAAMlG,UAAU,OAAhB,SACE,mBAAGA,UAAU,kBAEf,iDAfoC,4CAoB1C,4BAAA8I,EAAA,6DACEM,GAAY,GADd,SAEgCzG,EAAa0G,SAF7C,OAEQC,EAFR,OAGE7I,QAAQC,IAAI4I,GACZF,GAAY,GAJd,4CApB0C,sBA2B1C,OACE,yBAAQpJ,UAAU,iBAAiBY,QA5BK,2CA4BxC,UACE,sBAAMZ,UAAU,OAAhB,SACE,mBAAGA,UAAW,eAAiBmJ,EAAW,WAAa,QAEzD,+BAAOA,EAAW,WAAa,wBC7BrC,SAASI,EAAT,GAAoC,IAAbxJ,EAAY,EAAZA,SACrB,OACE,qBACEC,UAAU,sDACVwJ,KAAK,aACL9D,aAAW,kBAHb,SAKG3F,IAKP,SAAS0J,EAAT,GAA0C,IAAvB1J,EAAsB,EAAtBA,SAAU2J,EAAY,EAAZA,SAC3B,OACE,qBAAK1J,UAAW,gBAAkB0J,EAAW,YAAc,IAA3D,SACG3J,IAKP,SAAS4J,EAAT,GAAiD,IAAzBD,EAAwB,EAAxBA,SAAUE,EAAc,EAAdA,WAChC,OACE,oBACEC,SAAS,IACTL,KAAK,SACLxJ,UAAW,yBAA2B0J,EAAW,YAAc,IAC/D9I,QAASgJ,EACTlE,aAAW,OACXoE,gBAAeJ,EANjB,UAQE,sBAAMK,cAAY,SAClB,sBAAMA,cAAY,SAClB,sBAAMA,cAAY,YAKxB,SAASC,EAAT,GAAsC,IAAfJ,EAAc,EAAdA,WACrB,SAASK,EAAS/J,GAChB,OACE,cAAC,IAAD,2BACMA,GADN,IAEEgK,OAAK,EACLtJ,QAASgJ,EACT5J,UAAU,cACVmK,gBAAgB,mBAItB,OACE,sBAAKnK,UAAU,eAAf,UACE,cAACiK,EAAD,CAAU/B,GAAG,IAAb,kBACA,cAAC+B,EAAD,CAAU/B,GAAG,SAAb,mBACA,cAAC+B,EAAD,CAAU/B,GAAG,eAAb,yBACA,cAAC+B,EAAD,CAAU/B,GAAG,iBAAb,2BACA,cAAC+B,EAAD,CAAU/B,GAAG,UAAb,oBACA,sBAAKlI,UAAU,wCAAf,UACE,mBAAGA,UAAU,cAAc6J,SAAS,IAApC,oBAGA,sBAAK7J,UAAU,2BAAf,UACE,cAACiK,EAAD,CAAU/B,GAAG,sBAAb,yBACA,cAAC+B,EAAD,CAAU/B,GAAG,iBAAb,6BAOV,SAASkC,IACP,OACE,qBAAKpK,UAAU,aAAf,SACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,UAAf,UACE,cAACkJ,EAAD,IACA,cAACL,EAAD,WAOV,SAASwB,EAAT,GAAkC,IAAZzJ,EAAW,EAAXA,QACpB,OAAIc,UAAU+G,WAEV,mBAAGzI,UAAU,cAAc6J,SAAS,IAAIjJ,QAASA,EAAjD,SACE,sBAAMZ,UAAU,OAAhB,SACE,mBAAGA,UAAU,0BAKd,KAyBMsK,mBAtBf,SAAgBpK,GAAQ,IAAD,EACWwD,oBAAS,GADpB,mBACdgG,EADc,KACJa,EADI,KAErB,SAASX,IACPW,GAAab,GAEf,OACE,eAACH,EAAD,WACE,sBAAKvJ,UAAU,eAAf,UACE,cAACqK,EAAD,CAAYzJ,QAASV,EAAMsK,QAAQC,SACnC,cAAC,IAAD,CAASvC,GAAG,IAAIlI,UAAU,cAA1B,wBAGA,cAAC2J,EAAD,CAAcD,SAAUA,EAAUE,WAAYA,OAEhD,eAACH,EAAD,CAASC,SAAUA,EAAnB,UACE,cAACM,EAAD,CAAaJ,WAAYA,IACzB,cAACQ,EAAD,aClHO,SAASM,IAGtB,OCJK,WAAuB,IAAD,EACGhH,qBAC5B,WAAYhC,aAAaA,UAAUiJ,QAFV,mBACpBC,EADoB,KACXC,EADW,KAc3B,OAVA3G,qBAAU,WACR,IAAM4G,EAAgB,kBAAMD,GAAW,IACjCE,EAAe,kBAAMF,GAAW,IAGtC,OAFAhK,OAAOkB,iBAAiB,UAAW+I,GACnCjK,OAAOkB,iBAAiB,SAAUgJ,GAC3B,WACLlK,OAAOyD,oBAAoB,UAAWwG,GACtCjK,OAAOyD,oBAAoB,SAAUyG,MAEtC,IACIH,EDZSI,GAMd,yBAAShL,UAAU,gDAAnB,SACE,oBAAIA,UAAU,8BAAd,uBAJK,K,YEHX,SAASiL,EAAT,GAA8B,IAAbnK,EAAY,EAAZA,SAKf,OAJAoD,qBAAU,WCCL,IAAkBgH,EDArBzK,QAAQC,IAAI,iBAAkBI,GCAToK,EDCZpK,ECAXqK,IAAQC,SAASxJ,cAAyBsJ,KDCvC,CAACpK,IACG,KAGM,SAASuK,IACtB,OACE,cAAC,IAAD,CACEH,KAAK,IACLI,OAAQ,gBAAGxK,EAAH,EAAGA,SAAH,OACN,cAACmK,EAAD,CAAOnK,SAAUA,EAASyK,SAAWzK,EAAS0K,YCftDL,IAAQM,WAAW,iBAAkB,CACnCC,UAAU9J,ICQZ,IAAM+J,EAAYC,gBAAK,kBAAM,gCACvBC,EAAaD,gBAAK,kBAAM,gCACxBE,EAAmBF,gBAAK,kBAAM,gCAC9BG,EAAkBH,gBAAK,kBAAM,gCAC7BI,EAAkBJ,gBAAK,kBAAM,gCAC7BK,EAAoBL,gBAAK,kBAAM,gCA+BtBM,EA7BH,WACV,OACE,qBAAKlM,UAAU,MAAf,SACE,cAAC,EAAD,UACE,eAAC,IAAD,CAAQmM,SAAUvK,cAAlB,UACE,cAACyJ,EAAD,IACA,cAAC,EAAD,IACA,cAACX,EAAD,IACA,sBAAMlB,KAAK,OAAX,SACE,cAACvJ,EAAA,EAAD,UACE,eAAC,WAAD,CAAUmM,SAAU,6CAApB,UACE,cAAC,IAAD,CAAOlC,OAAK,EAACgB,KAAK,IAAImB,UAAW3D,IACjC,cAAC,IAAD,CAAOwC,KAAK,SAASmB,UAAWV,IAChC,cAAC,IAAD,CAAOT,KAAK,eAAemB,UAAWL,IACtC,cAAC,IAAD,CAAOd,KAAK,iBAAiBmB,UAAWJ,IACxC,cAAC,IAAD,CAAOf,KAAK,UAAUmB,UAAWR,IACjC,cAAC,IAAD,CAAOX,KAAK,sBAAsBmB,UAAWN,IAC7C,cAAC,IAAD,CAAOb,KAAK,iBAAiBmB,UAAWP,WAI9C,cAACtF,EAAD,IACA,cAACb,EAAD,YC5BK2G,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBrK,MAAK,YAAkD,IAA/CsK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASxB,OACP,cAAC,IAAMyB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAW1BX,EAAgB7L,QAAQC,O","file":"static/js/main.5a8e0367.chunk.js","sourcesContent":["import React from \"react\";\nimport ErrorBoundary from \"components/ErrorBoundary\";\n\nexport default function Page({ title, children }) {\n  return (\n    <ErrorBoundary>\n      <div className=\"notch-inset-item\">\n        <section className=\"section\">\n          <div className=\"container is-fluid\">\n            <h1 className=\"title has-text-white\">{title}</h1>\n            <div>{children}</div>\n          </div>\n        </section>\n      </div>\n    </ErrorBoundary>\n  );\n}\n","import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, message: \"\", name: \"\" };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true, message: error.message, name: error.name };\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <>\n          <h1>Something went wrong.</h1>\n          <p>{this.state.name}</p>\n          <p>{this.state.message}</p>\n          <p>\n            <button className=\"button\" onClick={() => window.location.reload()}>Reload Page</button>\n          </p>\n        </>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"floatingContainer\":\"FloatingMessage_floatingContainer__1UbJ1\",\"withShadow\":\"FloatingMessage_withShadow__z0I1L\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  let reloading = false;\n  navigator.serviceWorker.oncontrollerchange = () => {\n    if (reloading) return;\n    reloading = true;\n    window.location.reload();\n  };\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { useEffect, useState } from \"react\";\nimport * as sw from \"../serviceWorkerRegistration\";\n\nfunction useAppStatus() {\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n  const [offLineReady, setoffLineReady] = useState(false);\n  const [registration, setregistration] = useState(null);\n  const [installPrompt, setinstallPrompt] = useState(null);\n\n  useEffect(() => {\n    const installPromptHandler = (e) => {\n      // Prevent Chrome 67 and earlier from automatically showing the prompt\n      e.preventDefault();\n      // Stash the event so it can be triggered later.\n      setinstallPrompt(e);\n      console.log(\"Install prompt available!\", e);\n    };\n    window.addEventListener(\"beforeinstallprompt\", installPromptHandler);\n    return () => {\n      window.removeEventListener(\"beforeinstallprompt\", installPromptHandler);\n    };\n  }, []);\n\n  useEffect(() => {\n    let ignore = false;\n    sw.register({\n      onUpdate: (registration) => {\n        if (ignore) return;\n        console.log(\n          \"onUpdate called! New content after windows closed!\",\n          registration\n        );\n        setregistration(registration);\n        setUpdateAvailable(true);\n      },\n      onSuccess: (registration) => {\n        if (ignore) return;\n        console.log(\"onSuccess called! Offline ready!\", registration);\n        setregistration(registration);\n        setoffLineReady(true);\n      },\n    });\n    console.log(\"serviceWorker.register called\");\n    return () => {\n      console.log(\"ignore set to true\");\n      ignore = true;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!(\"serviceWorker\" in navigator)) {\n      setregistration(undefined);\n      return;\n    }\n    let ignore = false;\n    navigator.serviceWorker.getRegistration().then((currentRegistration) => {\n      if (ignore) return;\n      console.log(\"Current sw registration\", currentRegistration);\n      setregistration(currentRegistration);\n      setoffLineReady(!!currentRegistration);\n      setUpdateAvailable(currentRegistration && !!currentRegistration.waiting);\n    });\n    return () => {\n      ignore = true;\n    };\n  }, []);\n\n  return { updateAvailable, offLineReady, registration, installPrompt };\n}\n\nexport default useAppStatus;\n","import React from \"react\";\nimport useAppStatus from \"custom-hooks/useAppStatus\";\n\nexport const AppStatusContext = React.createContext({\n  updateAvailable: false,\n  offLineReady: false,\n  registration: null,\n  installPrompt: null\n});\n\nexport const AppStatusProvider = ({ children }) => {\n  const appUpdateAvailable = useAppStatus();\n  return (\n    <AppStatusContext.Provider value={appUpdateAvailable}>\n      {children}\n    </AppStatusContext.Provider>\n  );\n};\n","import React from \"react\";\nimport styles from \"components/FloatingMessage.module.scss\";\n\nexport default function FloatingMessage({ title, message = \"\", actionText, deleteClick, actionClick }) {\n  return (<div className={styles.floatingContainer + \" notch-inset\"}>\n    <article className={\"message is-primary \" + styles.withShadow}>\n      <div className=\"message-header\">\n        <p>{title}</p>\n        <button className=\"delete is-medium\" aria-label=\"delete\" onClick={deleteClick} />\n      </div>\n      <div className=\"message-body\">\n        {message}\n        <p>\n          <button className=\"button is-primary is-fullwidth is-outlined\" onClick={actionClick}>\n            {actionText}\n          </button>\n        </p>\n      </div>\n    </article>\n  </div>);\n}\n","import React, { useContext, useState } from \"react\";\nimport { AppStatusContext } from \"context/AppStatusContext\";\nimport FloatingMessage from \"components/FloatingMessage\";\n\nexport default function AppUpdate() {\n  const { updateAvailable, registration, installPrompt } = useContext(\n    AppStatusContext\n  );\n  const [showInstallPrompt, setShowInstallPrompt] = useState(true);\n  const [showAppUpdate, setShowAppUpdate] = useState(true);\n\n  if (showAppUpdate && updateAvailable) {\n    const updateServiceWorker = () => {\n      registration.waiting.postMessage({type: \"SKIP_WAITING\"});\n    };\n    return (\n      <FloatingMessage\n        title=\"New version of the app available!\"\n        actionText=\"Update Now\"\n        message={\n          <p>\n            New version will automatically load next visit after all open\n            windows are closed.\n          </p>\n        }\n        deleteClick={() => setShowAppUpdate(false)}\n        actionClick={updateServiceWorker}\n      />\n    );\n  }\n  if (showInstallPrompt && installPrompt) {\n    const promptInstall = () => {\n      installPrompt.prompt();\n      // Wait for the user to respond to the prompt\n      installPrompt.userChoice.then(choiceResult => {\n        if (choiceResult.outcome === \"accepted\") {\n          console.log(\"User accepted the A2HS prompt\");\n        } else {\n          console.log(\"User dismissed the A2HS prompt\");\n        }\n        setShowInstallPrompt(false);\n      });\n    };\n    return (\n      <FloatingMessage\n        title=\"App available for installation!\"\n        actionText=\"Install App\"\n        deleteClick={() => setShowInstallPrompt(false)}\n        actionClick={promptInstall}\n      />\n    );\n  }\n  return null;\n}\n","import React from 'react';\nimport preval from \"preval.macro\";\n\nconst dateTimeStamp = preval`module.exports = new Date().toLocaleString();`;\n\nexport default function BuildTimeStamp() {\n  return (\n    <p>\n      Built: {dateTimeStamp}\n    </p>\n  )\n}\n","import React from \"react\";\nimport BuildTimeStamp from 'components/BuildTimeStamp';\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer\">\n      <div className=\"content has-text-centered\">\n        <p>\n          PWA Tester by <a href=\"https://github.com/corwinm\">Corwin Marsh</a>.\n          The source code is available on{\" \"}\n          <a href=\"https://github.com/corwinm/pwa-tester\">\n            {\" \"}\n            <span className=\"icon\">\n              <i className=\"fab fa-github\" />\n            </span>\n            GitHub\n          </a>\n          <a href=\"https://googlechrome.github.io/lighthouse/viewer/?gist=6ac7f4fd8b349c903dfcf04d2ff88e3e\">\n            {\" \"}\n            <span className=\"icon\">\n              <i className=\"fab fa-chrome\" />\n            </span>\n            Lighthouse Score\n          </a>\n        </p>\n        <BuildTimeStamp />\n      </div>\n    </footer>\n  );\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Page from \"components/Page\";\n\nconst getFeatures = registration => [\n  {\n    description: \"Geolocation\",\n    route: \"/geolocation\",\n    supported: navigator.geolocation\n  },\n  {\n    description: \"Camera\",\n    route: \"/camera\",\n    supported: navigator.mediaDevices && navigator.mediaDevices.getUserMedia\n  },\n  {\n    description: \"Notifications\",\n    route: \"/notifications\",\n    supported: \"Notification\" in window\n  },\n  {\n    description: \"Payments\",\n    supported: registration && registration.paymentManager\n  },\n  {\n    description: \"Motion\",\n    route: \"/device/motion\",\n    supported: window.DeviceMotionEvent\n  },\n  {\n    description: \"Orientation\",\n    route: \"/device/orientation\",\n    supported: window.DeviceOrientationEvent\n  },\n  { description: \"Vibration\", supported: navigator.vibrate },\n  { description: \"Online Status\", supported: \"onLine\" in navigator },\n  { description: \"Clipboard\", supported: navigator.clipboard },\n  { description: \"Web Share\", supported: navigator.share },\n  {\n    description: \"Push Notifications\",\n    supported: registration && \"pushManager\" in registration\n  },\n  {\n    description: \"Background Sync\",\n    supported: registration && \"sync\" in registration\n  }\n];\n\nexport default function Features({ registration }) {\n  const features = getFeatures(registration);\n  const mappedFeatures = features\n    .map((feature, index) => <Feature key={index} {...feature} />)\n    .reduce((rows, element, index) => {\n      index % 3 === 0 && rows.push([]);\n      rows[rows.length - 1].push(element);\n      return rows;\n    }, [])\n    .map((row, index) => (\n      <div key={index} className=\"tile is-ancestor\">\n        {row}\n      </div>\n    ));\n  return <Page title=\"Features\">{mappedFeatures}</Page>;\n}\n\nfunction Feature({ description, supported, route }) {\n  if (supported === null) {\n    return (\n      <div className=\"tile is-parent\">\n        <article className=\"tile is-child box notification is-primary\">\n          <p className=\"title\">{description}</p>\n          <p className=\"subtitle\">Loading...</p>\n        </article>\n      </div>\n    );\n  }\n  if (supported) {\n    return (\n      <div className=\"tile is-parent\">\n        <article className=\"tile is-child box notification is-success has-text-black\">\n          <p className=\"title\">{description}</p>\n          <p className=\"subtitle\">\n            Supported{\" \"}\n            {route && (\n              <NavLink\n                to={route}\n                aria-label={description}\n                style={{ textDecoration: \"none\" }}\n              >\n                <span className=\"icon\">\n                  <i className=\"fas fa-arrow-circle-right\" />\n                </span>\n              </NavLink>\n            )}\n          </p>\n        </article>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"tile is-parent\">\n      <article className=\"tile is-child box notification is-danger has-text-black\">\n        <p className=\"title\">{description}</p>\n        <p className=\"subtitle\">Not Supported</p>\n      </article>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { AppStatusContext } from \"context/AppStatusContext\";\nimport Page from \"components/Page\";\nimport Features from \"components/Features\";\n\nfunction ServiceWorkerDetails({ registration }) {\n  if (!registration) return null;\n\n  return (\n    <Page title=\"Details\">\n      <div>\n        Active State: {registration.active && registration.active.state}\n      </div>\n      <div>\n        Waiting State: {registration.waiting && registration.waiting.state}\n      </div>\n      {(window.matchMedia(\"(display-mode: standalone)\").matches ||\n        window.navigator.standalone) && <div>Display mode is standalone</div>}\n    </Page>\n  );\n}\n\nexport default function Home() {\n  const appUpdate = useContext(AppStatusContext);\n\n  const message =\n    \"serviceWorker\" in navigator\n      ? \"ServiceWorker Supported!\"\n      : \"ServiceWorker NOT Supported!\";\n\n  const callToAction = () => {\n    alert(\"This is going to be something really great someday!\");\n  };\n  return (\n    <>\n      <section className=\"hero is-primary notch-inset-item\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">{message}</h1>\n            <button\n              className=\"button is-primary is-inverted is-outlined\"\n              onClick={callToAction}\n            >\n              Call to Action!\n            </button>\n          </div>\n        </div>\n      </section>\n      <ServiceWorkerDetails registration={appUpdate.registration} />\n      <Features registration={appUpdate.registration} />\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function ShareButton() {\n  const share = async () => {\n    try {\n      await navigator.share({\n        title: \"PWA Tester\",\n        text: \"PWA Tester\",\n        url: window.location.href\n      });\n      console.log(\"Successful share.\");\n    } catch (error) {\n      console.log(\"Error sharing:\", error);\n    }\n  };\n\n  return (\n    <button\n      className=\"button is-primary\"\n      onClick={share}\n      disabled={!navigator.share}\n    >\n      <span className=\"icon\">\n        <i className=\"fas fa-share\" />\n      </span>\n      <span>Share</span>\n    </button>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { AppStatusContext } from \"context/AppStatusContext\";\n\nexport default function CheckUpdateButton() {\n  const { registration, updateAvailable } = useContext(AppStatusContext);\n  const [updating, setUpdating] = useState(false);\n\n  if (!registration) return null;\n\n  if (updateAvailable) {\n    const updateServiceWorker = () => {\n      registration.waiting.postMessage({type: \"SKIP_WAITING\"});\n    };\n    return (\n      <button className=\"button is-info\" onClick={updateServiceWorker}>\n        <span className=\"icon\">\n          <i className=\"fas fa-sync\" />\n        </span>\n        <span>Update Now</span>\n      </button>\n    );\n  }\n\n  async function checkForUpdate() {\n    setUpdating(true);\n    const newRegistration = await registration.update();\n    console.log(newRegistration);\n    setUpdating(false);\n  }\n\n  return (\n    <button className=\"button is-info\" onClick={checkForUpdate}>\n      <span className=\"icon\">\n        <i className={\"fas fa-sync\" + (updating ? \" fa-spin\" : \"\")} />\n      </span>\n      <span>{updating ? \"Updating\" : \"Check for Update\"}</span>\n    </button>\n  );\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport ShareButton from \"components/ShareButton\";\nimport CheckUpdateButton from \"components/CheckUpdateButton\";\n\nfunction NavbarFixed({ children }) {\n  return (\n    <nav\n      className=\"navbar is-transparent is-fixed-top notch-inset-item\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      {children}\n    </nav>\n  );\n}\n\nfunction NavMenu({ children, menuOpen }) {\n  return (\n    <div className={\"navbar-menu \" + (menuOpen ? \"is-active\" : \"\")}>\n      {children}\n    </div>\n  );\n}\n\nfunction NavHamburger({ menuOpen, toggleMenu }) {\n  return (\n    <a\n      tabIndex=\"0\"\n      role=\"button\"\n      className={\"navbar-burger burger \" + (menuOpen ? \"is-active\" : \"\")}\n      onClick={toggleMenu}\n      aria-label=\"menu\"\n      aria-expanded={menuOpen}\n    >\n      <span aria-hidden=\"true\" />\n      <span aria-hidden=\"true\" />\n      <span aria-hidden=\"true\" />\n    </a>\n  );\n}\n\nfunction NavbarStart({ toggleMenu }) {\n  function MenuLink(props) {\n    return (\n      <NavLink\n        {...props}\n        exact\n        onClick={toggleMenu}\n        className=\"navbar-item\"\n        activeClassName=\"has-text-link\"\n      />\n    );\n  }\n  return (\n    <div className=\"navbar-start\">\n      <MenuLink to=\"/\">Home</MenuLink>\n      <MenuLink to=\"/about\">About</MenuLink>\n      <MenuLink to=\"/geolocation\">Geolocation</MenuLink>\n      <MenuLink to=\"/notifications\">Notifications</MenuLink>\n      <MenuLink to=\"/camera\">Camera</MenuLink>\n      <div className=\"navbar-item has-dropdown is-hoverable\">\n        <a className=\"navbar-link\" tabIndex=\"0\">\n          Device\n        </a>\n        <div className=\"navbar-dropdown is-boxed\">\n          <MenuLink to=\"/device/orientation\">Orientation</MenuLink>\n          <MenuLink to=\"/device/motion\">Motion</MenuLink>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction NavbarEnd() {\n  return (\n    <div className=\"navbar-end\">\n      <div className=\"navbar-item\">\n        <div className=\"buttons\">\n          <CheckUpdateButton />\n          <ShareButton />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction BackButton({ onClick }) {\n  if (navigator.standalone) {\n    return (\n      <a className=\"navbar-item\" tabIndex=\"0\" onClick={onClick}>\n        <span className=\"icon\">\n          <i className=\"fas fa-arrow-left\" />\n        </span>\n      </a>\n    );\n  }\n  return null;\n}\n\nfunction Navbar(props) {\n  const [menuOpen, setMenuOpen] = useState(false);\n  function toggleMenu() {\n    setMenuOpen(!menuOpen);\n  }\n  return (\n    <NavbarFixed>\n      <div className=\"navbar-brand\">\n        <BackButton onClick={props.history.goBack} />\n        <NavLink to=\"/\" className=\"navbar-item\">\n          PWA Tester\n        </NavLink>\n        <NavHamburger menuOpen={menuOpen} toggleMenu={toggleMenu} />\n      </div>\n      <NavMenu menuOpen={menuOpen}>\n        <NavbarStart toggleMenu={toggleMenu} />\n        <NavbarEnd />\n      </NavMenu>\n    </NavbarFixed>\n  );\n}\n\nexport default withRouter(Navbar);\n","import React from \"react\";\nimport { useOffline } from \"../custom-hooks/useOffline\";\n\nexport default function OfflineIndicator() {\n  const offline = useOffline();\n\n  if (!offline) {\n    return null;\n  }\n  return (\n    <section className=\"notch-inset-item has-background-grey-lighter \">\n      <h1 className=\"navbar-item has-text-danger\">Offline</h1>\n    </section>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nexport function useOffline() {\n  const [offline, setOffline] = useState(\n    \"onLine\" in navigator ? !navigator.onLine : true\n  );\n  useEffect(() => {\n    const updateOffline = () => setOffline(true);\n    const updateOnline = () => setOffline(false);\n    window.addEventListener(\"offline\", updateOffline);\n    window.addEventListener(\"online\", updateOnline);\n    return () => {\n      window.removeEventListener(\"offline\", updateOffline);\n      window.removeEventListener(\"online\", updateOnline);\n    };\n  }, []);\n  return offline;\n}\n","import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { pageView } from \"context/AnalyticsContext\";\n\nfunction Trace({ location }) {\n  useEffect(() => {\n    console.log(\"Trace pageView\", location);\n    pageView(location);\n  }, [location]);\n  return null;\n}\n\nexport default function RouteTrace() {\n  return (\n    <Route\n      path=\"/\"\n      render={({ location }) => (\n        <Trace location={location.pathname + location.search} />\n      )}\n    />\n  );\n}\n","import ReactGA from \"react-ga\";\n\nReactGA.initialize(\"UA-139919526-1\", {\n  testMode: process.env.NODE_ENV !== \"production\",\n});\n\nexport function pageView(path) {\n  ReactGA.pageview(process.env.PUBLIC_URL + path);\n}\n","import { AppStatusProvider } from \"context/AppStatusContext\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport AppUpdate from \"components/AppUpdate\";\nimport ErrorBoundary from \"components/ErrorBoundary\";\nimport Footer from \"components/Footer\";\nimport Home from \"components/Home\";\nimport Navbar from \"components/Navbar\";\nimport OfflineIndicator from \"components/OfflineIndicator\";\nimport React, { Suspense, lazy } from \"react\";\nimport RouteTrace from \"components/RouteTrace\";\n\nconst LazyAbout = lazy(() => import(\"components/About\"));\nconst LazyCamera = lazy(() => import(\"components/Camera\"));\nconst LazyDeviceMotion = lazy(() => import(\"components/DeviceMotion\"));\nconst LazyOrientation = lazy(() => import(\"components/DeviceOrientation\"));\nconst LazyGeolocation = lazy(() => import(\"components/Geolocation\"));\nconst LazyNotifications = lazy(() => import(\"components/Notifications\"));\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <AppStatusProvider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <RouteTrace />\n          <Navbar />\n          <OfflineIndicator />\n          <main role=\"main\">\n            <ErrorBoundary>\n              <Suspense fallback={<div>Loading...</div>}>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/about\" component={LazyAbout} />\n                <Route path=\"/geolocation\" component={LazyGeolocation} />\n                <Route path=\"/notifications\" component={LazyNotifications} />\n                <Route path=\"/camera\" component={LazyCamera} />\n                <Route path=\"/device/orientation\" component={LazyOrientation} />\n                <Route path=\"/device/motion\" component={LazyDeviceMotion} />\n              </Suspense>\n            </ErrorBoundary>\n          </main>\n          <Footer />\n          <AppUpdate />\n        </Router>\n      </AppStatusProvider>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App\";\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}