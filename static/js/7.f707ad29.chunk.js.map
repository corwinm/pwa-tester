{"version":3,"sources":["components/Geolocation.js","custom-hooks/useGeolocation.js"],"names":["Geolocation","location","_useState","useState","undefined","_useState2","Object","slicedToArray","setlocation","useEffect","navigator","geolocation","Error","getPosition","watchPosition","e","coords","error","console","timeout","clearWatch","useGeolocation","react_default","a","createElement","Page","title","latitude","longitude","__webpack_require__","d","__webpack_exports__"],"mappings":"mIAIe,SAASA,IACtB,IAAMC,ECHD,WAA0B,IAAAC,EACCC,wBAASC,GADVC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACxBD,EADwBI,EAAA,GACdG,EADcH,EAAA,GAsB/B,OApBAI,oBAAU,WACR,IAAKC,UAAUC,YACb,OAAOC,MAAM,iCASf,IAAMC,EAAcH,UAAUC,YAAYG,cAP1C,SAAoBC,GAClBP,EAAYO,EAAEC,SAEhB,SAAkBC,GAChBC,QAAQD,MAAMA,GACdT,EAAYS,IAKZ,CAAEE,QAAS,MAEb,OAAO,WACLT,UAAUC,YAAYS,WAAWP,KAElC,IACIZ,EDnBUoB,GAEjB,OAAIpB,aAAoBW,MACfU,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,MAAM,kCAInBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,MAAM,6BACVJ,EAAAC,EAAAC,cAAA,wBAAgBvB,GAAYA,EAAS0B,UACrCL,EAAAC,EAAAC,cAAA,yBAAiBvB,GAAYA,EAAS2B,YAd5CC,EAAAC,EAAAC,EAAA,4BAAA/B","file":"static/js/7.f707ad29.chunk.js","sourcesContent":["import React from \"react\";\nimport Page from \"components/Page\";\nimport { useGeolocation } from \"custom-hooks/useGeolocation\";\n\nexport default function Geolocation() {\n  const location = useGeolocation();\n\n  if (location instanceof Error) {\n    return <Page title=\"Geolocation is NOT supported!\" />;\n  }\n\n  return (\n    <Page title=\"Geolocation is supported!\">\n      <div>latitude: {location && location.latitude}</div>\n      <div>longitude: {location && location.longitude}</div>\n    </Page>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nexport function useGeolocation() {\n  const [location, setlocation] = useState(undefined);\n  useEffect(() => {\n    if (!navigator.geolocation) {\n      return Error(\"Geolocation is not supported.\");\n    }\n    function geoSuccess(e) {\n      setlocation(e.coords);\n    }\n    function geoError(error) {\n      console.error(error);\n      setlocation(error);\n    }\n    const getPosition = navigator.geolocation.watchPosition(\n      geoSuccess,\n      geoError,\n      { timeout: 10000 }\n    );\n    return () => {\n      navigator.geolocation.clearWatch(getPosition);\n    };\n  }, []);\n  return location;\n}\n"],"sourceRoot":""}