{"version":3,"sources":["components/DeviceOrientation.js","custom-hooks/useOrientation.js"],"names":["DeviceOrientationSupported","orientation","_useState","useState","_useState2","Object","slicedToArray","setOrientation","useEffect","deviceOrientationHandler","rotationEvent","console","log","window","addEventListener","removeEventListener","useOrientation","react_default","a","createElement","Page","title","Fragment","alpha","beta","gamma","webkitCompassHeading","DeviceOrientation","DeviceOrientationEvent","__webpack_require__","d","__webpack_exports__"],"mappings":"mIAIA,SAASA,IACP,IAAMC,ECHD,WAA0B,IAAAC,EACOC,mBAAS,MADhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACxBD,EADwBG,EAAA,GACXG,EADWH,EAAA,GAgB/B,OAdAI,oBAAU,WACR,IAAMC,EAA2B,SAAAC,GAC/BC,QAAQC,IAAIF,GACZH,EAAeG,IAOjB,OALAG,OAAOC,iBACL,oBACAL,GACA,GAEK,WACLI,OAAOE,oBAAoB,oBAAqBN,KAEjD,IACIR,EDbae,GAEpB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,MAAM,sBACTpB,EACCgB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KACEL,EAAAC,EAAAC,cAAA,qBAAalB,EAAYsB,OACzBN,EAAAC,EAAAC,cAAA,oBAAYlB,EAAYuB,MACxBP,EAAAC,EAAAC,cAAA,qBAAalB,EAAYwB,OACzBR,EAAAC,EAAAC,cAAA,uBAAelB,EAAYyB,uBAG7BT,EAAAC,EAAAC,cAAA,uBAMO,SAASQ,IACtB,OAAId,OAAOe,uBACFX,EAAAC,EAAAC,cAACnB,EAAD,MAGPiB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,MAAM,sBACVJ,EAAAC,EAAAC,cAAA,6BA7BNU,EAAAC,EAAAC,EAAA,4BAAAJ","file":"static/js/6.b05c2870.chunk.js","sourcesContent":["import React from \"react\";\nimport Page from \"components/Page\";\nimport { useOrientation } from \"custom-hooks/useOrientation\";\n\nfunction DeviceOrientationSupported() {\n  const orientation = useOrientation();\n\n  return (\n    <Page title=\"Device Orientation\">\n      {orientation ? (\n        <>\n          <div>Alpha: {orientation.alpha}</div>\n          <div>Beta: {orientation.beta}</div>\n          <div>Gamma: {orientation.gamma}</div>\n          <div>Compass: {orientation.webkitCompassHeading}</div>\n        </>\n      ) : (\n        <div>No data</div>\n      )}\n    </Page>\n  );\n}\n\nexport default function DeviceOrientation() {\n  if (window.DeviceOrientationEvent) {\n    return <DeviceOrientationSupported />;\n  }\n  return (\n    <Page title=\"Device Orientation\">\n      <div>Not supported</div>\n    </Page>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useOrientation() {\n  const [orientation, setOrientation] = useState(null);\n  useEffect(() => {\n    const deviceOrientationHandler = rotationEvent => {\n      console.log(rotationEvent);\n      setOrientation(rotationEvent);\n    };\n    window.addEventListener(\n      \"deviceorientation\",\n      deviceOrientationHandler,\n      true\n    );\n    return () => {\n      window.removeEventListener(\"deviceorientation\", deviceOrientationHandler);\n    };\n  }, []);\n  return orientation;\n}\n"],"sourceRoot":""}